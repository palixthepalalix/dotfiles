#user information
[user]
	name = Alix Cook
	email = acook@appnexus.com

#color highlighting
[color]
	ui = auto
	interactive = auto

[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green

[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold
	whitespace = red reverse

[color "status"]
	added = yellow
	changed = green
	untracked = cyan

#command aliases
[alias]
	st = status
	ci = commit
	br = branch
	co = checkout
    surf = submodule update --recursive --init --force
	alias = "config --get-regexp 'alias.*'"
    diff = diff --word-diff
    show-url = config --get remote.origin.url

    # git di $number gives diff between HEAD~number and current state
    di = !"d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"

    # create or checkout branch
    go = "!f() { git checkout -b \"$1\" 2> /dev/null || git checkout \"$1\"; }; f"

    # shows that yung graph
    graph = log --graph --color --pretty=format:"%C(yellow)%H%C(green)%d%C(reset)%n%x20%cd%n%x20%cn%x20(%ce)%n%x20%s%n"

    # Show verbose output about tags, branches or remotes
    tags = tag -l
    branches = branch -a
    remotes = remote -v

    # ammend staged files to latest commit
    amend = commit --amend --reuse-message=HEAD

    # Remove branches that have already been merged with master
    # a.k.a. ‘delete merged’
    dm = "!git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d; git remote -v update -p"

#some core configurations
[core]
	autocrlf = false
	editor = vim
    excludesfile = ~/.gitignore
    # rebase safer on osx
    trustctime = false
